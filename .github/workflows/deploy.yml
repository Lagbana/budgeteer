name: Orezime Server CI/CD

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Builds orezime server docker container and runs tests
        run: |
          docker build -t orezime/server -f ./Dockerfile .
          docker run orezime/server npm test -- --coverage

      - name: Gpg decryption
        run: |
          echo "${SECRET_KEY}" | gpg --batch --no-tty --yes --passphrase-fd 0 --decrypt -o serviceAccount.json serviceAccount.json.gpg
          echo "${SECRET_KEY}" | gpg --batch --no-tty --yes --passphrase-fd 0 --decrypt -o .env .env.gpg
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Google cloud configuration and authentication
        run: |
          gcloud version || true
          if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
          gcloud version
          gcloud auth activate-service-account --key-file serviceAccount.json
          gcloud config set project orezime-228423
          gcloud config set compute/zone europe-west3-a
          docker build -t orezime/server .

      - name: Authenticate and push to DockerHub then Google Cloud Appengine
        run: |
          echo $DOCKER_ID
          # Log in to the docker CLI
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
          # Take those images and push them to docker hub
          docker push orezime/server
          bash ./deploy.sh
        env:
          DOCKER_ID: ${{ secrets.DOCKER_ID }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
